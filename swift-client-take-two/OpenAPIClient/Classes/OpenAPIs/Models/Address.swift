//
// Address.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Detailed address information */
public struct Address: Codable, JSONEncodable, Hashable {

    /** Street number (e.g., 123) */
    public var streetNumber: String?
    /** Street name (e.g., Main St) */
    public var streetName: String?
    /** Optional unit or apartment number */
    public var unit: String?
    /** Neighborhood or district */
    public var neighborhood: String?
    /** City of the location */
    public var city: String?
    /** State or province of the location */
    public var stateOrProvince: String?
    /** Postal or ZIP code */
    public var postalCode: String?
    /** Country of the location */
    public var country: String?

    public init(streetNumber: String? = nil, streetName: String? = nil, unit: String? = nil, neighborhood: String? = nil, city: String? = nil, stateOrProvince: String? = nil, postalCode: String? = nil, country: String? = nil) {
        self.streetNumber = streetNumber
        self.streetName = streetName
        self.unit = unit
        self.neighborhood = neighborhood
        self.city = city
        self.stateOrProvince = stateOrProvince
        self.postalCode = postalCode
        self.country = country
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case streetNumber
        case streetName
        case unit
        case neighborhood
        case city
        case stateOrProvince
        case postalCode
        case country
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(streetNumber, forKey: .streetNumber)
        try container.encodeIfPresent(streetName, forKey: .streetName)
        try container.encodeIfPresent(unit, forKey: .unit)
        try container.encodeIfPresent(neighborhood, forKey: .neighborhood)
        try container.encodeIfPresent(city, forKey: .city)
        try container.encodeIfPresent(stateOrProvince, forKey: .stateOrProvince)
        try container.encodeIfPresent(postalCode, forKey: .postalCode)
        try container.encodeIfPresent(country, forKey: .country)
    }
}


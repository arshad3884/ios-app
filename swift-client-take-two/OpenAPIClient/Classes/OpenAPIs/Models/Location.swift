//
// Location.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** information pertaining to a specific location */
public struct Location: Codable, JSONEncodable, Hashable {

    static let nameRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.+$/")
    static let placeIdRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[\\w\\-\\|]+$/")
    public var name: String?
    public var placeId: String?
    public var coordinates: Coordinates?
    public var geoHash: String?
    public var address: Address?

    public init(name: String? = nil, placeId: String? = nil, coordinates: Coordinates? = nil, geoHash: String? = nil, address: Address? = nil) {
        self.name = name
        self.placeId = placeId
        self.coordinates = coordinates
        self.geoHash = geoHash
        self.address = address
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case placeId
        case coordinates
        case geoHash
        case address
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(placeId, forKey: .placeId)
        try container.encodeIfPresent(coordinates, forKey: .coordinates)
        try container.encodeIfPresent(geoHash, forKey: .geoHash)
        try container.encodeIfPresent(address, forKey: .address)
    }
}


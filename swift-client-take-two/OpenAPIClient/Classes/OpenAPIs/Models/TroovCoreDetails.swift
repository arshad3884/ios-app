//
// TroovCoreDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Contains the details were are essential to a Troov */
public struct TroovCoreDetails: Codable, JSONEncodable, Hashable {

    static let titleRule = StringRule(minLength: 5, maxLength: 75, pattern: "/^.+$/")
    static let detailsRule = StringRule(minLength: 5, maxLength: 250, pattern: "/[\\S\\s]*/")
    /** title for the date which appears in all the date preview tiles */
    public var title: String?
    /** any additional descriptions that the user would like to add to the date */
    public var details: String?
    /** the date's start time */
    public var startTime: Date?
    public var expenseRating: ExpenseRating?
    /** users will assign free form text tags to each date to improve searchability */
    public var tags: [String]?
    public var relationshipInterests: [RelationshipInterest]?

    public init(title: String? = nil, details: String? = nil, startTime: Date? = nil, expenseRating: ExpenseRating? = nil, tags: [String]? = nil, relationshipInterests: [RelationshipInterest]? = nil) {
        self.title = title
        self.details = details
        self.startTime = startTime
        self.expenseRating = expenseRating
        self.tags = tags
        self.relationshipInterests = relationshipInterests
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case title
        case details
        case startTime
        case expenseRating
        case tags
        case relationshipInterests
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(details, forKey: .details)
        try container.encodeIfPresent(startTime, forKey: .startTime)
        try container.encodeIfPresent(expenseRating, forKey: .expenseRating)
        try container.encodeIfPresent(tags, forKey: .tags)
        try container.encodeIfPresent(relationshipInterests, forKey: .relationshipInterests)
    }
}


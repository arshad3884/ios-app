//
// PhoneVerification.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PhoneVerification: Codable, JSONEncodable, Hashable {

    public var verified: Bool? = false
    public var latestVerificationCode: Int?
    public var latestVerificationId: String?
    public var lastVerifiedAt: Date?
    public var verificationCodesSentCount: Int64?
    public var verificationFailedAttemptsCount: Int64?
    public var verificationCodeSentAt: Date?
    public var verificationExpiresAt: Date?

    public init(verified: Bool? = false, latestVerificationCode: Int? = nil, latestVerificationId: String? = nil, lastVerifiedAt: Date? = nil, verificationCodesSentCount: Int64? = nil, verificationFailedAttemptsCount: Int64? = nil, verificationCodeSentAt: Date? = nil, verificationExpiresAt: Date? = nil) {
        self.verified = verified
        self.latestVerificationCode = latestVerificationCode
        self.latestVerificationId = latestVerificationId
        self.lastVerifiedAt = lastVerifiedAt
        self.verificationCodesSentCount = verificationCodesSentCount
        self.verificationFailedAttemptsCount = verificationFailedAttemptsCount
        self.verificationCodeSentAt = verificationCodeSentAt
        self.verificationExpiresAt = verificationExpiresAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case verified
        case latestVerificationCode
        case latestVerificationId
        case lastVerifiedAt
        case verificationCodesSentCount
        case verificationFailedAttemptsCount
        case verificationCodeSentAt
        case verificationExpiresAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(verified, forKey: .verified)
        try container.encodeIfPresent(latestVerificationCode, forKey: .latestVerificationCode)
        try container.encodeIfPresent(latestVerificationId, forKey: .latestVerificationId)
        try container.encodeIfPresent(lastVerifiedAt, forKey: .lastVerifiedAt)
        try container.encodeIfPresent(verificationCodesSentCount, forKey: .verificationCodesSentCount)
        try container.encodeIfPresent(verificationFailedAttemptsCount, forKey: .verificationFailedAttemptsCount)
        try container.encodeIfPresent(verificationCodeSentAt, forKey: .verificationCodeSentAt)
        try container.encodeIfPresent(verificationExpiresAt, forKey: .verificationExpiresAt)
    }
}


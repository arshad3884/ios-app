//
// UsageStatistics.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Represents the usage statistics for a user  */
public struct UsageStatistics: Codable, JSONEncodable, Hashable {

    static let troovsCreatedCountRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let troovsConfirmedCountRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let troovJoinRequestsCountRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let troovsViewedCountRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The number of troovs created by the user  */
    public var troovsCreatedCount: Int?
    /** The number of troovs confirmed by the user  */
    public var troovsConfirmedCount: Int?
    /** The number of troov join requests made by the user  */
    public var troovJoinRequestsCount: Int?
    /** The number of troovs viewed by the user  */
    public var troovsViewedCount: Int?

    public init(troovsCreatedCount: Int? = nil, troovsConfirmedCount: Int? = nil, troovJoinRequestsCount: Int? = nil, troovsViewedCount: Int? = nil) {
        self.troovsCreatedCount = troovsCreatedCount
        self.troovsConfirmedCount = troovsConfirmedCount
        self.troovJoinRequestsCount = troovJoinRequestsCount
        self.troovsViewedCount = troovsViewedCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case troovsCreatedCount
        case troovsConfirmedCount
        case troovJoinRequestsCount
        case troovsViewedCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(troovsCreatedCount, forKey: .troovsCreatedCount)
        try container.encodeIfPresent(troovsConfirmedCount, forKey: .troovsConfirmedCount)
        try container.encodeIfPresent(troovJoinRequestsCount, forKey: .troovJoinRequestsCount)
        try container.encodeIfPresent(troovsViewedCount, forKey: .troovsViewedCount)
    }
}

